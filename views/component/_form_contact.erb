<form action="/<%=session[:locale] || 'es'%>/send-mail" method="post" class="needs-validation" novalidate>
  <div class="row">
    <div class="mb-3 col-xs-12">
      <label class="form-label"><%= t("contact-us-form.name-input.label") %></label>
      <input
        type="text"
        class="form-control"
        name="name"
        id="name-input"
        required>
      <div class="invalid-feedback">
        <%= t("contact-us-form.name-input.error-message") %>
      </div>
    </div>
  </div>
  <div class="row">
    <div class="mb-3 col-xs-12 col-md-6">
      <label class="form-label"><%= t("contact-us-form.email-input.label") %></label>
      <input
        type="email"
        class="form-control"
        name="email"
        id="email-input"
        required>
      <div class="invalid-feedback">
        <%= t("contact-us-form.email-input.error-message") %>
      </div>
    </div>
    <div class="mb-3 col-xs-12 col-md-6 contact-only-field">
      <label class="form-label"><%= t("contact-us-form.phone-input.label") %></label>
      <input
        type="text"
        class="form-control"
        id="phone-input"
        name="phone">
    </div>
  </div>
  <div class="mb-3 contact-only-field">
    <label class="form-label"><%= t("contact-us-form.message-input.label") %></label>
    <div id="emailHelp" class="form-text"><%= t("contact-us-form.message-input.sub-label") %></div>
    <textarea
      class="form-control"
      name="message"
      id="message-input"
      rows="3"
      required></textarea>

    <div class="invalid-feedback">
      <%= t("contact-us-form.message-input.error-message") %>
    </div>
  </div>

  <%#= recaptcha_tags callback: 'enableButton' %>
  <div id="recaptcha-placeholder"></div>

  <input type="hidden" id="input-context" name="context" value="<%= request.path_info %>">
  <input type="hidden" id="resource-slug" name="resource_slug">
  <div class="btn-center-container">
    <button type="submit"
            id="submit"
            class="btn my-primary-button"
            value="Submit"
            disabled
    >
      <%= t("contact-us-form.button.text") %></button>
  </div>
</form>
<script>
  let recaptchaLoaded = false;
  var RECAPTCHA_SITE_KEY = '<%= ENV['RECAPTCHA_SITE_KEY'] %>';

  function loadReCaptcha() {
    if (recaptchaLoaded) return;

    var script = document.createElement('script');
    script.src = 'https://www.recaptcha.net/recaptcha/api.js?render=explicit';
    script.async = true;
    script.defer = true;
    script.onload = function() {
      var placeholder = document.getElementById('recaptcha-placeholder');
      placeholder.innerHTML = '<div id="recaptcha-widget"></div>';
      grecaptcha.ready(function() {
        grecaptcha.render('recaptcha-widget', {
          'sitekey': RECAPTCHA_SITE_KEY,
          'callback': 'enableButton'
        });
      });
      recaptchaLoaded = true;
    };
    document.body.appendChild(script);
  }

  function enableButton() {
    document.getElementById("submit").disabled = false;
  }

function setupDownloadForm(resourceSlug) {
    console.log('setupDownloadForm called with:', resourceSlug);
    
    const modalTitle = document.getElementById('modal-title');
    const resourceSlugInput = document.getElementById('resource-slug');
    const contactOnlyFields = document.querySelectorAll('.contact-only-field');
    const messageInput = document.getElementById('message-input');
    
    console.log('Elements found:', {
        modalTitle,
        resourceSlugInput,
        contactOnlyFields: contactOnlyFields.length,
        messageInput
    });

    if (resourceSlug) {
      // Download mode
      modalTitle.textContent = '<%= t("contact-us-form.download") %>';
      resourceSlugInput.value = resourceSlug;
      contactOnlyFields.forEach(field => field.style.display = 'none');
      messageInput.removeAttribute('required');
    } else {
      // Contact mode
      modalTitle.textContent = '<%= t("contact-us-form.title") %>';
      resourceSlugInput.value = '';
      contactOnlyFields.forEach(field => field.style.display = '');
      messageInput.setAttribute('required', '');
    }

    loadReCaptcha();
  }

  // Wait for the DOM to be fully loaded
  document.addEventListener('DOMContentLoaded', function() {
    var modalOpeners = document.querySelectorAll('.modal-opener');
    modalOpeners.forEach(function(button) {
      button.addEventListener('click', loadReCaptcha);
    });

    // If the modal is already open when the page loads, load reCAPTCHA
    if (document.querySelector('.modal.show')) {
      loadReCaptcha();
    }
  });

  (function () {
    'use strict'

    var forms = document.querySelectorAll('.needs-validation')

    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }
          form.classList.add('was-validated')
        }, false)
      })
  })()
</script>